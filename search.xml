<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis</title>
      <link href="/posts/Mybatis/"/>
      <url>/posts/Mybatis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><center><h1>第1章 框架概述</h1></center><h2 id="软件开发常用结构"><a href="#软件开发常用结构" class="headerlink" title="软件开发常用结构"></a>软件开发常用结构</h2><div class="note info">            <h3 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h3><p>界面层（User Interface layer）、业务逻辑层（Business Logic Layer）、数据访问层（Data access layer）</p>          </div><p><strong>三层的职责:</strong></p><ol><li>界面层（表示层，视图层）：主要功能是接受用户的数据，显示请求的处理结果。使用 web 页面和<br>用户交互，手机 app 也就是表示层的，用户在 app 中操作，业务逻辑在服务器端处理。</li><li>业务逻辑层：接收表示传递过来的数据，检查数据，计算业务逻辑，调用数据访问层获取数据。</li><li>数据访问层：与数据库打交道。主要实现对数据的增、删、改、查。将存储在数据库中的数据提交<br>给业务层，同时将业务层处理的数据保存到数据库</li></ol><p><strong>三层的处理请求的交互：</strong></p><p>用户—&gt; 界面层—&gt;业务逻辑层—&gt;数据访问层—&gt;DB 数据库</p><p><img src="/blog-img/pasted-3.png" alt="upload successful"></p><p><strong>为什么要使用三层？</strong></p><p>1，结构清晰、耦合度低, 各层分工明确<br>2，可维护性高，可扩展性高<br>3，有利于标准化<br>4，开发人员可以只关注整个结构中的其中某一层的功能实现<br>5，有利于各层逻辑的复用</p><div class="note info">            <h3 id="常用框架"><a href="#常用框架" class="headerlink" title="常用框架"></a>常用框架</h3>          </div><p><strong>常见的 J2EE 中开发框架：</strong></p><blockquote><p>MyBatis 框架：<br>MyBatis 是一个优秀的基于 java 的持久层框架，内部封装了 jdbc，开发者只需要关注 sql 语句<br>本身，而不需要处理加载驱动、创建连接、创建 statement、关闭连接，资源等繁杂的过程。<br>MyBatis 通过 xml 或注解两种方式将要执行的各种 sql 语句配置起来，并通过 java 对象和 sql 的<br>动态参数进行映射生成最终执行的 sql 语句，最后由 mybatis 框架执行 sql 并将结果映射为 java<br>对象并返回。</p></blockquote><blockquote><p>Spring 框架：<br>Spring 框架为了解决软件开发的复杂性而创建的。Spring 使用的是基本的 JavaBean 来完成以前<br>非常复杂的企业级开发。Spring 解决了业务对象，功能模块之间的耦合，不仅在 javase,web 中使用，<br>大部分 Java 应用都可以从 Spring 中受益。<br>Spring 是一个轻量级控制反转(IoC)和面向切面(AOP)的容器。</p></blockquote><blockquote><p>SpringMVC 框架<br>Spring MVC 属于 SpringFrameWork 3.0 版本加入的一个模块，为 Spring 框架提供了构建 Web<br>应用程序的能力。现在可以 Spring 框架提供的 SpringMVC 模块实现 web 应用开发，在 web 项目中<br>可以无缝使用 Spring 和 Spring MVC 框架。</p></blockquote><h2 id="框架是什么"><a href="#框架是什么" class="headerlink" title="框架是什么"></a>框架是什么</h2>]]></content>
      
      
      <categories>
          
          <category> java框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> java框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea-Error(3, 32) java程序包不存在的问题</title>
      <link href="/posts/javaError1/"/>
      <url>/posts/javaError1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p><strong>问题：用maven配置，新建项目编译时提示以下错误信息：</strong><br><code>java: 程序包org.springframework.context不存在</code><br><code>java: 程序包org.springframework.context.support不存在</code></p><p><strong>原因：idea的Maven有没有勾选，没有的话勾上，然后ok，运行一下项目，等加载完成就ok了。不勾选的，项目是用IDEA实现的没有链到Maven，所以会出现包不存在。</strong></p><p><strong>解决：ctrl+shift+S 打开设置勾选</strong><br><img src="/blog-img/javaError2.png" alt="Alt text"></p>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> 问题集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单元测试执行多次，导致插入数据重复</title>
      <link href="/posts/javaError2/"/>
      <url>/posts/javaError2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p><strong>问题：在用单元测试代码时，重复执行，导致向数据库插入两次数据。</strong></p><p><strong>原因：单元测试时会先build进行编译，而build的时候会执行你项目中的所有加了@Test的方法。</strong></p><p><img src="/blog-img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E9%87%8D%E5%A4%8D.jpg" alt="Alt text"></p><p><strong>解决：通过在pom.xml配置文件进行配置。</strong></p><blockquote><p><code>&lt;build&gt;</code><br>&emsp; <code>&lt;plugins&gt;</code><br>&emsp;&emsp;<code>&lt;plugin&gt;</code><br>&emsp;&emsp;&emsp;<code>&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</code><br>&emsp;&emsp;&emsp; <code>&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</code><br>&emsp;&emsp;&emsp;<code>&lt;configuration&gt;</code><br>&emsp;&emsp;&emsp;&emsp;  <code>&lt;skipTests&gt;true&lt;/skipTests&gt;</code><br>&emsp;&emsp;&emsp;  <code>&lt;/configuration&gt;</code><br>&emsp;&emsp; <code>&lt;/plugin&gt;</code><br>&emsp; <code>&lt;/plugins&gt;</code><br><code>&lt;/build&gt;</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题集 </tag>
            
            <tag> junit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="/posts/Markdown/"/>
      <url>/posts/Markdown/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="认识Markdown"><a href="#认识Markdown" class="headerlink" title="认识Markdown"></a>认识Markdown</h1><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。</p></blockquote><p>简单来说，一般我们用的字处理软件Word或Pages有大量的排版、字体设置，而Markdown是个非常容易学习的排版语法。</p><p>Markdown 的优点如下：</p><ul><li>纯文本，所以兼容性极强，可以用所有文本编辑器打开。</li><li>让你专注于文字而不是排版。</li><li>格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。</li><li>Markdown 的标记语法有极好的可读性。</li></ul><h1 id="Markdown编辑工具"><a href="#Markdown编辑工具" class="headerlink" title="Markdown编辑工具"></a>Markdown编辑工具</h1><p>推荐新手使用<a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象 </a>编辑器，对新手极其友好。</p><p><img src="/blog-img/Markdown/1590415731146.png" alt="Alt text"></p><p>热爱编程和码字博客主也可以选择<a href="https://www.cnblogs.com/xueweihan/archive/2019/10/24/11728087.html" target="_blank" rel="noopener">这五款免费的Markdown编辑器</a></p><h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h2><p>标题能显示出文章的结构。行首插入1-6个 # ，每增加一个 # 表示更深入层次的内容，对应到标题的深度由 1-6 阶。<strong>注意：需要在 # 后加一个空格，这是最标准的Markdown语法。</strong></p><p><img src="/blog-img/Markdown/1590417132717.png" alt="Alt text"></p><h2 id="2-文本样式"><a href="#2-文本样式" class="headerlink" title="2.文本样式"></a>2.文本样式</h2><p>（带“*”星号的文本样式，在原版Markdown标准中不存在，但在其大部分衍生标准中被添加）</p><p><img src="/blog-img/Markdown/1590417166411.png" alt="Alt text"></p><p>补充：markdowm首行缩进方法–一个空格<code>&amp;ensp;</code> 两个空格 <code>&amp;emsp;</code></p><h2 id="3-图片"><a href="#3-图片" class="headerlink" title="3.图片"></a>3.图片</h2><p>插入图片的语法就是在插入链接的语法前面加’!’。</p><p>插入网络上已存在的图片可以使用图床，这里推荐<a href="https://imgchr.com" target="_blank" rel="noopener">路过图床</a> ，生成URL地址即可。<strong>（以下使用马克飞象快捷键）</strong></p><p><img src="/blog-img/Markdown/1590418153960.png" alt="Alt text"></p><h2 id="4-注释"><a href="#4-注释" class="headerlink" title="4.注释"></a>4.注释</h2><ul><li><p><strong>html注释</strong></p><p>Markdown内嵌html语法，所以可以用html注释。</p><blockquote><p><code>&lt;!--哈哈我是注释，不会在浏览器中显示。--&gt;</code></p></blockquote></li><li><p><strong>hack方法</strong><br>hack方法就是利用markdown的解析原理来实现注释的。</p><blockquote><p><code>[comment]: &lt;&gt; (注释，不会在浏览器中显示。)</code><br><code>[comment]: &lt;&gt; (哈哈我是注释，不会在浏览器中显示。)</code><br><code>[comment]: &lt;&gt; (哈哈我是注释，不会在浏览器中显示。)</code><br><code>[//]: &lt;&gt; (哈哈我是注释，不会在浏览器中显示。)</code><br><code>[//]: # (哈哈我是注释，不会在浏览器中显示。)</code><br>可以用表情包形式注释，例如<br><code>[*_*]: 注释内容</code><br><code>[^_^]: 其中[]中的内容可以自定义</code><br><code>[@_@]: 但是这个注释在代码段中无效，只能在外部使用</code></p></blockquote></li></ul><h2 id="5-脚注"><a href="#5-脚注" class="headerlink" title="5.脚注"></a>5.脚注</h2><p> 脚注一般位于页面的底部，可以作为文档某处内容的注释.</p><blockquote><p>这里是脚注[^脚注]<br>[^脚注]: 这里是脚注的内容，”脚注”可以替换成数字或字母.</p></blockquote><h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6.表格"></a>6.表格</h2><p> 表格的语法麻烦一点</p><p><code>| 测试  |   测试     | 测试   |</code><br><code>| :------- | :-------:| ----: |</code><br><code>|</code>:<code>表示左对齐|</code>::<code>表示居中 |</code>:<code>表示右对齐|</code></p><p>效果：</p><table><thead><tr><th align="left">测试</th><th align="center">测试</th><th align="right">测试</th></tr></thead><tbody><tr><td align="left"><code>:</code>表示左对齐</td><td align="center"><code>::</code>表示居中</td><td align="right"><code>:</code> 表示右对齐</td></tr></tbody></table><h2 id="7-流程图"><a href="#7-流程图" class="headerlink" title="7.流程图"></a>7.流程图</h2><p><img src="/blog-img/Markdown/1590424467082.png" alt="Alt text"></p><p>以及时序图:</p><p><img src="/blog-img/Markdown/1590424554284.png" alt="Alt text"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>看到这里你应该熟悉了Markdown 的基本语法啦，然后可以去这个在线<a href="https://daringfireball.net/projects/markdown/dingus" target="_blank" rel="noopener">markdown-html在线转换上</a>练习，不用一小时就可以掌握了。</p>]]></content>
      
      
      <categories>
          
          <category> 编辑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 轻量级标记语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HelloWorld</title>
      <link href="/posts/Myblog/"/>
      <url>/posts/Myblog/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="我的第一个-博客！！！"><a href="#我的第一个-博客！！！" class="headerlink" title="我的第一个 博客！！！"></a>我的第一个 博客！！！</h1><p>使用hexo admin 快速部署博客<br><img src="/blog-img/pasted-0.png" alt="upload successful"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[language] [title] [url] [link text]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
